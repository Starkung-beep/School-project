#define BLYNK_TEMPLATE_ID "TMPLwpcY97Nj"
#define BLYNK_DEVICE_NAME "ESP8266"

#define BLYNK_FIRMWARE_VERSION        "0.1.0"

#define BLYNK_PRINT Serial

#define APP_DEBUG

#define USE_NODE_MCU_BOARD

#include "BlynkEdgent.h"

#include <OneWire.h>
#include <DallasTemperature.h>

const int oneWireBus = 15;
OneWire oneWire(oneWireBus);
DallasTemperature tempSensor(&oneWire);

float tempCelsius;
float tempFahrenheit;


#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);

BlynkTimer timer;

void sensorDataSend()
{
  pinMode(A0,INPUT);
  int sensor = analogRead(A0);
  float volte = sensor*(5.0/1024.0);
  Serial.println(volte);

  tempSensor.requestTemperatures();
  tempCelsius = tempSensor.getTempCByIndex(0);
  tempFahrenheit = tempCelsius * 9 / 5 + 32;
  
  float C = tempSensor.getTempCByIndex(0);

  Blynk.virtualWrite(V1, tempCelsius);
  Blynk.virtualWrite(V2, volte);
  Blynk.virtualWrite(V3, tempFahrenheit);

  lcd.begin();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(C);
  lcd.print("*C");

  lcd.setCursor(0, 1);
  lcd.print("Turbidity: ");
  lcd.print(volte);

}

void setup()
{
  timer.setInterval(1000L, sensorDataSend);
  Serial.begin(115200);
  delay(100);
  BlynkEdgent.begin();
}

void loop() {
  BlynkEdgent.run();
  timer.run();
}
